//@ runDefault("--useDollarVM=1", "--jitPolicyScale=0.1")
function instantiate(moduleBase64, importObject) {
    let bytes = Uint8Array.fromBase64(moduleBase64);
    return WebAssembly.instantiate(bytes, importObject);
  }
  const log = function (msg) { };
  const report = $.agent.report;
  const isJIT = callerIsBBQOrOMGCompiled;
const extra = {isJIT};
(async function () {
let memory0 = new WebAssembly.Memory({initial: 3782, shared: true, maximum: 4702});
/**
@param {I32} a0
@param {FuncRef} a1
@param {ExternRef} a2
@returns {[I32, FuncRef, ExternRef]}
 */
let fn0 = function (a0, a1, a2) {
a0?.toString(); a1?.toString(); a2?.toString();
return [13, a1, a2];
};
/**
@returns {void}
 */
let fn1 = function () {
};
/**
@returns {void}
 */
let fn2 = function () {
};
/**
@param {FuncRef} a0
@param {ExternRef} a1
@returns {[FuncRef, ExternRef]}
 */
let fn3 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [a0, a1];
};
/**
@returns {void}
 */
let fn4 = function () {
};
/**
@returns {void}
 */
let fn5 = function () {
};
/**
@param {FuncRef} a0
@param {ExternRef} a1
@returns {[FuncRef, ExternRef]}
 */
let fn6 = function (a0, a1) {
a0?.toString(); a1?.toString();
return [a0, a1];
};
/**
@param {FuncRef} a0
@param {ExternRef} a1
@returns {void}
 */
let fn7 = function (a0, a1) {
a0?.toString(); a1?.toString();
};
/**
@returns {void}
 */
let fn8 = function () {
};
let tag2 = new WebAssembly.Tag({parameters: ['anyfunc', 'externref']});
let tag3 = new WebAssembly.Tag({parameters: []});
let global0 = new WebAssembly.Global({value: 'i32', mutable: true}, 295824777);
let global1 = new WebAssembly.Global({value: 'i64', mutable: true}, 451227669n);
let global2 = new WebAssembly.Global({value: 'f64', mutable: true}, 43550.49195598054);
let global4 = new WebAssembly.Global({value: 'anyfunc', mutable: true}, null);
let global6 = new WebAssembly.Global({value: 'i32', mutable: true}, 2736504614);
let m1 = {fn0, fn6, fn8, global0, global6, memory0, tag6: tag3};
let m2 = {fn1, fn2, fn3, fn5, global1, global5: global0, global7: new WebAssembly.Global({value: 'externref', mutable: false}, {}), tag2, tag3, tag4: tag3, tag5: tag3};
let m0 = {fn4, fn7, global2, global3: new WebAssembly.Global({value: 'externref', mutable: false}, {}), global4};
let importObject0 = /** @type {Imports2} */ ({extra, m0, m1, m2});
let i0 = await instantiate('', importObject0);
let {fn9, fn10, global8, global9, global10, global11, memory1, table0, table1, tag0, tag1} = /**
  @type {{
fn9: (a0: I32, a1: FuncRef, a2: ExternRef) => [I32, FuncRef, ExternRef],
fn10: (a0: FuncRef, a1: ExternRef) => [FuncRef, ExternRef],
global8: WebAssembly.Global,
global9: WebAssembly.Global,
global10: WebAssembly.Global,
global11: WebAssembly.Global,
memory1: WebAssembly.Memory,
table0: WebAssembly.Table,
table1: WebAssembly.Table,
tag0: WebAssembly.Tag,
tag1: WebAssembly.Tag
  }} */ (i0.instance.exports);
table0.set(37, table0);
table0.set(22, table0);
table0.set(23, table0);
table0.set(25, table0);
table0.set(15, table0);
table0.set(3, table0);
table0.set(51, table0);
log('calling fn9');
report('progress');
try {
  for (let k=0; k<10; k++) {
  let zzz = fn9(global6.value, fn10, {});
  if (!(zzz instanceof Array)) { throw new Error('expected array but return value is '+zzz); }
if (zzz.length != 3) { throw new Error('expected array of length 3 but return value is '+zzz); }
let [r0, r1, r2] = zzz;
r0?.toString(); r1?.toString(); r2?.toString();
  }
} catch (e) {
  if (e instanceof WebAssembly.Exception) {
  log(e); if (e.stack) { log(e.stack); }
  } else if (e instanceof TypeError) {
  if (e.message === 'an exported wasm function cannot contain a v128 parameter or return value') { log(e); } else { throw e; }
  } else if (e instanceof WebAssembly.RuntimeError || e instanceof RangeError) { log(e); } else { throw e; }
}
log('calling fn10');
report('progress');
try {
  for (let k=0; k<25; k++) {
  let zzz = fn10(fn9, {});
  if (!(zzz instanceof Array)) { throw new Error('expected array but return value is '+zzz); }
if (zzz.length != 2) { throw new Error('expected array of length 2 but return value is '+zzz); }
let [r0, r1] = zzz;
r0?.toString(); r1?.toString();
  }
} catch (e) {
  if (e instanceof WebAssembly.Exception) {
  log(e); if (e.stack) { log(e.stack); }
  } else if (e instanceof TypeError) {
  if (e.message === 'an exported wasm function cannot contain a v128 parameter or return value') { log(e); } else { throw e; }
  } else if (e instanceof WebAssembly.RuntimeError || e instanceof RangeError) { log(e); } else { throw e; }
}
log('calling fn10');
report('progress');
try {
  for (let k=0; k<10; k++) {
  let zzz = fn10(fn9, {});
  if (!(zzz instanceof Array)) { throw new Error('expected array but return value is '+zzz); }
if (zzz.length != 2) { throw new Error('expected array of length 2 but return value is '+zzz); }
let [r0, r1] = zzz;
r0?.toString(); r1?.toString();
  }
} catch (e) {
  if (e instanceof WebAssembly.Exception) {
  log(e); if (e.stack) { log(e.stack); }
  } else if (e instanceof TypeError) {
  if (e.message === 'an exported wasm function cannot contain a v128 parameter or return value') { log(e); } else { throw e; }
  } else if (e instanceof WebAssembly.RuntimeError || e instanceof RangeError) { log(e); } else { throw e; }
}
log('calling fn9');
report('progress');
try {
  for (let k=0; k<11; k++) {
  let zzz = fn9(global6.value, fn10, {});
  if (!(zzz instanceof Array)) { throw new Error('expected array but return value is '+zzz); }
if (zzz.length != 3) { throw new Error('expected array of length 3 but return value is '+zzz); }
let [r0, r1, r2] = zzz;
r0?.toString(); r1?.toString(); r2?.toString();
  }
} catch (e) {
  if (e instanceof WebAssembly.Exception) {
  log(e); if (e.stack) { log(e.stack); }
  } else if (e instanceof TypeError) {
  if (e.message === 'an exported wasm function cannot contain a v128 parameter or return value') { log(e); } else { throw e; }
  } else if (e instanceof WebAssembly.RuntimeError || e instanceof RangeError) { log(e); } else { throw e; }
}
let tables = [table0, table1];
for (let table of tables) {
for (let k=0; k < table.length; k++) { table.get(k)?.toString(); }
}
})().then(() => {
  log('after')
  report('after');
}).catch(e => {
  log(e)
  log('error')
  report('error');
})

