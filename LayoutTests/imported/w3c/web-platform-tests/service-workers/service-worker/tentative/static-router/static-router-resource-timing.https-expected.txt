
FAIL Main resource matched the rule with fetch-event source assert_equals: expected 0 but got 1
FAIL Main resource load matched with the condition and resource timing assert_equals: expected 0 but got 1
FAIL Main resource load not matched with the condition and resource timing assert_equals: no rule matched on main resource expected (string) "" but got (undefined) undefined
FAIL Main resource load matched with the cache source and resource timing assert_equals: expected 0 but got 1
FAIL Main resource fallback to the network when there is no cache entry and resource timing assert_equals: expected 0 but got 1
FAIL Subresource load matched the rule fetch-event source assert_equals: fetch-event as source on sub resource expected (string) "fetch-event" but got (undefined) undefined
FAIL Subresource load not matched with URLPattern condition assert_equals: no source type matched expected (string) "" but got (undefined) undefined
FAIL Subresource load matched with URLPattern condition assert_equals: expected "Network\n" but got "imrmg"
FAIL Subresource load matched with the cache source rule assert_equals: expected "From cache" but got ""
FAIL Subresource load did not match with the cache and fallback to the network assert_equals: expected "Network\n" but got "dpmim"
FAIL Main resource load matched the rule with race-network-and-fetch-handler source, and the fetch handler response is faster than the server response assert_equals: race as source on main resource, and fetch-event wins expected (string) "race-network-and-fetch" but got (undefined) undefined
FAIL Main resource load matched the rule with race-network-and-fetch-handler source, and the server reseponse is faster than the fetch handler assert_equals: expected "Network with GET request" but got "rcqfi"
FAIL Subresource load matched the rule with race-network-and-fetch-handler source, and the fetch handler response is faster than the server response assert_equals: race as source on subresource and fetch wins expected (string) "race-network-and-fetch" but got (undefined) undefined
FAIL Subresource load matched the rule with race-network-and-fetch-handler source, and the server reseponse is faster than the fetch handler assert_equals: expected "Network with GET request" but got "kmbqk"

